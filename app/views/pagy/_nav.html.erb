<%#
  This template is i18n-ready: if you don't use i18n, then you can replace the pagy_t
  calls with the actual strings ("&lsaquo; Prev", "Next &rsaquo;", "&hellip;").

  The link variable is set to a proc that returns the link tag.
  Usage: link.call( page_number [, text [, extra_attributes_string ]])
-%>
<% link = pagy_link_proc(pagy) -%>
<nav aria-label="pager" class="pagy_nav pagination" role="navigation">
  <% if pagy.prev -%>
    <%== link.call(pagy.prev, t('.prev'), 'aria-label="next" class="px-2 py-1 ml-2 text-sm font-semibold text-gray-700 bg-gray-300 rounded hover:bg-gray-700 hover:text-white"') %>
  <% end -%>
  <% pagy.series.each do |item| # series example: [1, :gap, 7, 8, "9", 10, 11, :gap, 36] -%>
  <% if item.is_a?(Integer) -%>
    <%== link.call(item, item, 'class="inline-flex items-center justify-center w-5 h-6 text-sm font-semibold leading-none text-gray-700 uppercase page"') %>
  <% elsif item.is_a?(String) -%>
    <div class="inline-flex items-center justify-center w-6 h-6 ml-1 text-sm font-bold leading-none text-white uppercase bg-gray-700">
      <%= item %>
    </div>
  <% elsif item == :gap -%>
    <span class="ml-1 font-semibold page gap">
      <%== pagy_t('pagy.nav.gap') %>
    </span>
  <% end -%>
<% end -%>
<% if pagy.next -%>
  <%== link.call(pagy.next, t('.next'), 'aria-label="next" class="px-2 py-1 ml-2 text-sm font-semibold text-gray-700 bg-gray-300 rounded hover:bg-gray-700 hover:text-white"') %>
<% end -%>
</nav>
